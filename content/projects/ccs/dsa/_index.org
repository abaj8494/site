+++
title = "Data Structures & Algorithms"
tags = ["trees", "graphs", "arrays", "sliding-window", "dp", "lp", "bst", "greedy", "randomised", "sorting", "searching"]
layout = "custom-list"
tikzajax = "true"
+++


{{< tikztwo >}}
\usepackage{xcolor}
\usetikzlibrary{arrows.meta,positioning,shapes.misc,calc}

% --- Colors ---
\definecolor{dsbrown}{HTML}{8A4F2D}
\definecolor{primviolet}{HTML}{7A6A8F}
\definecolor{itemviolet}{HTML}{6E687E}
\definecolor{magentaH}{HTML}{D6427A}
\definecolor{yellowH}{HTML}{D8BF2A}
\definecolor{grayH}{HTML}{79838E}
\definecolor{greenH}{HTML}{6B8469}
\definecolor{orangeH}{HTML}{D97A36}

% --- Styles ---
\tikzset{
  >={Stealth[length=3.8pt]},
  dotedge/.style={dash pattern=on 2pt off 2pt, line width=0.6pt},
  treeedge/.style={dotedge,-{Stealth[length=3.8pt]}},
  head/.style={draw=none, rounded corners=2mm, text=white,
               font=\bfseries\small, minimum width=34mm, minimum height=8mm,
               align=center, inner xsep=4mm, inner ysep=2.3mm},
  tag/.style={draw=none, rounded corners=1.5mm, text=white,
              font=\bfseries\footnotesize, minimum width=29mm, minimum height=6.8mm,
              align=center, inner xsep=3mm, inner ysep=1.8mm},
  item/.style={draw=none, rounded corners=1.5mm, text=white,
               font=\bfseries\scriptsize, minimum width=22mm, minimum height=6.2mm,
               align=center, inner xsep=2mm, inner ysep=1.3mm},
}

\begin{document}
\begin{tikzpicture}[scale=0.5,transform shape,node distance=10mm and 13mm] % slightly tighter

% Top title
\node[head, fill=dsbrown, minimum width=44mm] (top) {Data Structures};

% Level 1: Primitive vs Non-Primitive
\node[head, fill=primviolet] (prim) [below left=16mm and 80mm of top] {Primitive Data\\Structures};
\node[head, fill=magentaH]   (nonp) [below right=16mm and 80mm of top] {Non-Primitive\\Data Structures};

% dashed drops from top
\draw[treeedge] (top) -| (prim.north);
\draw[treeedge] (top) -| (nonp.north);

% ==== Primitive cluster: children under parent, left-in arrows merge upward ====
\def\pcsep{6.6mm}   % vertical gap between child boxes

% Children stacked under the Primitive node
\node[item, fill=itemviolet] (int) [below left =12mm and 26mm of prim] {Integer};
\node[item, fill=itemviolet] (flt) [below=12mm of prim] {Float};
\node[item, fill=itemviolet] (chr) [below right=12mm and 26mm of prim] {Character};
\node[item, fill=itemviolet] (bol) [below right=12mm and 68mm of prim] {Boolean};

% Individual arrows from parent to each child
\draw[treeedge] (prim) -| (int.north);
\draw[treeedge] (prim) -- (flt.north);
\draw[treeedge] (prim) -| (chr.north);
\draw[treeedge] (prim) -| (bol.north);
% ==== Non-Primitive side ====

% Non-Primitive split: Linear vs Non-Linear (slightly closer than before)
\node[head, fill=magentaH] (lin)  [below left =20mm and 86mm of nonp] {Linear};
\node[head, fill=magentaH] (nlin) [below right=20mm and 86mm of nonp] {Non-Linear};

\draw[treeedge] (nonp) -| (lin.north);
\draw[treeedge] (nonp) -| (nlin.north);

% Linear: Direct vs Sequential
\node[tag, fill=yellowH] (direct)     [below left =12mm and 22mm of lin] {Direct\\Access};
\node[tag, fill=grayH]   (sequential) [below right=12mm and 22mm of lin] {Sequential\\Access};

\draw[treeedge] (lin) -| (direct.north);
\draw[treeedge] (lin) -| (sequential.north);

% Direct items
\node[item, fill=yellowH!90!black] (arr) [below left =6mm and  8mm of direct] {Array};
\node[item, fill=yellowH!90!black] (mat) [below right=6mm and  8mm of direct] {Matrix};
\draw[treeedge] (direct) -| (arr.north);
\draw[treeedge] (direct) -| (mat.north);

% Sequential items
\node[item, fill=grayH!90!black] (ll)  [below left =6mm and 16mm of sequential] {Linked List};
\node[item, fill=grayH!90!black] (stk) [below=6mm of sequential] {Stack};
\node[item, fill=grayH!90!black] (que) [below right=6mm and 16mm of sequential] {Queue};
\draw[treeedge] (sequential) -| (ll.north);
\draw[treeedge] (sequential) -- (stk.north);
\draw[treeedge] (sequential) -| (que.north);

% Non-Linear: Hierarchical vs Unordered (slightly closer than before, still clear)
\node[tag, fill=greenH]  (hier) [below left =12mm and 26mm of nlin] {Hierarchical};
\node[tag, fill=orangeH] (unor) [below right=12mm and 26mm of nlin] {Unordered};

\draw[treeedge] (nlin) -| (hier.north);
\draw[treeedge] (nlin) -| (unor.north);

% Hierarchical items
\node[item, fill=greenH!90!black] (tree) [below left =6mm and 18mm of hier] {Trees};
\node[item, fill=greenH!90!black] (heap) [below=6mm of hier] {Heaps};
\node[item, fill=greenH!90!black] (trie) [below right=6mm and 18mm of hier] {Trie};
\draw[treeedge] (hier) -| (tree.north);
\draw[treeedge] (hier) -- (heap.north);
\draw[treeedge] (hier) -| (trie.north);

% Unordered items
\node[item, fill=orangeH!90!black] (graph) [below left =6mm and 18mm of unor] {Graphs};
\node[item, fill=orangeH!90!black] (set)   [below=6mm of unor] {Sets};
\node[item, fill=orangeH!90!black] (hash)  [below right=6mm and 18mm of unor] {Hash Tables};
\draw[treeedge] (unor) -| (graph.north);
\draw[treeedge] (unor) -- (set.north);
\draw[treeedge] (unor) -| (hash.north);

\end{tikzpicture}
\end{document}

{{< /tikztwo >}}
