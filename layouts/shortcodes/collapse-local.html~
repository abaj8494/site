{{ $folded := .Get "folded" | default "false" }}
<script>
document.addEventListener("DOMContentLoaded", function() {
  const heading = document.currentScript.previousElementSibling;
  const wrapper = document.createElement("div");
  wrapper.classList.add("collapsible-wrapper");

  const button = document.createElement("button");
  button.classList.add("toggle-button");
  button.setAttribute("aria-expanded", "{{ ne $folded "true" }}");
  button.textContent = "{{ if eq $folded "true" }}▶{{ else }}▼{{ end }}";

  heading.parentNode.insertBefore(wrapper, heading);
  wrapper.appendChild(button);
  wrapper.appendChild(heading);

  const content = document.createElement("div");
  content.classList.add("collapsible-content");
  if ("{{ ne $folded "true" }}") {
    content.classList.add("show");
  }

  let sibling = wrapper.nextElementSibling;
  while (sibling && !["H2", "H3", "H4", "H5", "H6"].includes(sibling.tagName)) {
    const nextSibling = sibling.nextElementSibling;
    content.appendChild(sibling);
    sibling = nextSibling;
  }

  wrapper.after(content);

  button.addEventListener("click", () => {
    const isExpanded = button.getAttribute("aria-expanded") === "true";
    button.setAttribute("aria-expanded", !isExpanded);
    button.textContent = isExpanded ? "▶" : "▼";
    content.classList.toggle("show");
  });
});
</script>

<style>
.collapsible-wrapper {
  display: flex;
  align-items: center;
  margin-bottom: 0px;
}

.toggle-button {
  cursor: pointer;
  border: none;
  background: none;
  color: black;
  font-size: 1rem;
  width: 1.5rem;
  height: 1.5rem;
  text-align: center;
  line-height: 1.5rem;
  margin-right: 8px;
  padding: 0;
}

[data-theme="dark"] .toggle-button {
  color: white;
}

.toggle-button:focus {
  outline: none;
}

.collapsible-content {
  display: none;
  margin-left: 15px;
  margin-bottom: 0px;
  padding: 1px 0;
  border-left: 0px solid #ccc;
  transition: all 0.3s ease-out;
}

.collapsible-content.show {
  display: block;
}
</style>
